---
http_interactions:
- request:
    method: get
    uri: http://ht4n.softdev.ch/index.php/license
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 26 Jan 2017 12:20:06 GMT
      Server:
      - Apache
      X-Powered-By:
      - PHP/5.2.17
      P3p:
      - CP="NOI ADM DEV PSAi COM NAV OUR OTRo STP IND DEM"
      Cache-Control:
      - no-cache
      Pragma:
      - no-cache
      Set-Cookie:
      - 26c4078938cf926bd3833951c448affd=0ccc5500982c88fef0af89528695e9e1; path=/
      Vary:
      - Accept-Encoding,User-Agent
      X-Xss-Protection:
      - 1; mode=block
      Strict-Transport-Security:
      - max-age=15768000
      Content-Length:
      - '2590'
      Content-Type:
      - text/html; charset=utf-8
      Age:
      - '0'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 26 Jan 2017 12:20:06 GMT
recorded_with: VCR 3.0.3
